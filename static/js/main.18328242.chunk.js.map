{"version":3,"sources":["ColorModeSwitcher.js","Card.js","Footer.js","CountryData.js","App.js","theme.js","index.js"],"names":["ColorModeSwitcher","props","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","fontSize","variant","color","marginLeft","onClick","icon","Card","borderWidth","borderRadius","overflow","boxShadow","src","Flag","w","objectFit","pt","p","fontWeight","Name","Capital","Continent","Population","Area","Footer","href","isExternal","ExternalLink","mx","CountryData","useState","countryName","setCountryName","countryData","setCountryData","a","axios","get","response","data","console","log","error","py","as","lineHeight","onSubmit","event","preventDefault","getData","direction","isRequired","children","type","value","onChange","e","target","required","autoFocus","leftIcon","colorScheme","spacing","mt","columns","map","prop","flags","svg","name","common","capital","region","population","area","official","App","theme","justifySelf","extendTheme","config","useSystemColorMode","ReactDOM","render","initialColorMode","document","getElementById"],"mappings":"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","file":"static/js/main.18328242.chunk.js","sourcesContent":["import React from 'react';\nimport { useColorMode, useColorModeValue, IconButton } from '@chakra-ui/react';\nimport { FaMoon, FaSun } from 'react-icons/fa';\n\nexport const ColorModeSwitcher = (props) => {\n  const { toggleColorMode } = useColorMode();\n  const text = useColorModeValue('dark', 'light');\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <IconButton\n      size=\"md\"\n      fontSize=\"lg\"\n      aria-label={`Switch to ${text} mode`}\n      variant=\"ghost\"\n      color=\"current\"\n      marginLeft=\"2\"\n      onClick={toggleColorMode}\n      icon={<SwitchIcon />}\n      {...props}\n    />\n  );\n};\n","import React from 'react';\n\nimport {\n  Box,\n  HStack,\n  Text,\n  Image,\n  Spacer,\n  Divider,\n  Stack,\n} from '@chakra-ui/react';\nimport { GiCapitol } from 'react-icons/gi';\nimport { BsFillPeopleFill } from 'react-icons/bs';\nimport { FaMapSigns, FaMapMarkerAlt, FaMap } from 'react-icons/fa';\n\nconst Card = (props) => {\n  return (\n    <Box borderWidth=\"1px\" borderRadius=\"lg\" overflow=\"hidden\" boxShadow=\"xl\">\n      <Image src={props.Flag} w=\"100%\" borderRadius=\"lg\" objectFit=\"fit\" />\n      <Divider pt=\"1\" />\n\n      <Box p=\"5\">\n        <Stack>\n          <HStack>\n            <HStack>\n              <FaMapMarkerAlt />\n              <Text fontSize=\"xl\">Name:</Text>\n            </HStack>\n            <Spacer />\n            <Text fontSize=\"xl\" fontWeight=\"bold\">\n              {props.Name}\n            </Text>\n          </HStack>\n          <Divider pt=\"4\" />\n          <HStack>\n            <HStack>\n              <GiCapitol />\n              <Text fontSize=\"xl\">Capital:</Text>\n            </HStack>\n            <Spacer />\n            <Text fontSize=\"xl\" fontWeight=\"bold\">\n              {props.Capital}\n            </Text>\n          </HStack>\n          <Divider pt=\"4\" />\n\n          <HStack>\n            <HStack>\n              <FaMapSigns />\n              <Text fontSize=\"xl\">Continent:</Text>\n            </HStack>\n            <Spacer />\n            <Text fontSize=\"xl\" fontWeight=\"bold\">\n              {props.Continent}\n            </Text>\n          </HStack>\n          <Divider pt=\"3\" />\n          <HStack>\n            <HStack>\n              <BsFillPeopleFill />\n              <Text fontSize=\"xl\">Population:</Text>\n            </HStack>\n            <Spacer />\n            <Text fontSize=\"xl\" fontWeight=\"bold\">\n              {props.Population}\n            </Text>\n          </HStack>\n          <Divider pt=\"3\" />\n          <HStack>\n            <HStack>\n              <FaMap />\n              <Text fontSize=\"xl\">Area:</Text>\n            </HStack>\n            <Spacer />\n            <Text fontSize=\"xl\" fontWeight=\"bold\">\n              {props.Area}\n            </Text>\n          </HStack>\n        </Stack>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { Box, Text, Link } from '@chakra-ui/react';\nimport { ExternalLinkIcon } from '@chakra-ui/icons';\n\nconst Footer = () => {\n  return (\n    <Box p=\"2\">\n      <Text>\n        Made with ❤️ by{' '}\n        <Link href=\"https://shivmsingh.github.io/\" isExternal>\n          Shivam Singh\n          <ExternalLinkIcon mx=\"2px\" />\n        </Link>\n      </Text>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import axios from 'axios';\nimport React, { useState } from 'react';\nimport {\n  Box,\n  VStack,\n  Heading,\n  Input,\n  InputGroup,\n  Stack,\n  InputLeftAddon,\n  Button,\n  FormControl,\n  SimpleGrid,\n} from '@chakra-ui/react';\nimport { FaSearch } from 'react-icons/fa';\nimport Card from './Card';\nimport Footer from './Footer';\n\nconst CountryData = () => {\n  const [countryName, setCountryName] = useState('');\n  const [countryData, setCountryData] = useState([]);\n\n  async function getData() {\n    try {\n      const response = await axios.get(\n        `https://restcountries.com/v3.1/name/${countryName}`\n      );\n      setCountryData((countryData) => [response.data, ...countryData]);\n      console.log(countryData);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    getData();\n    setCountryName('');\n  };\n  return (\n    <VStack py=\"4\">\n      <Heading as=\"h1\" size=\"2xl\" lineHeight=\"taller\">\n        REST Countries\n      </Heading>\n      <Box w={['95%', '90%', '80%', '80%', '40%']}>\n        <form onSubmit={handleSubmit}>\n          <Stack direction={['column', 'row', 'row', 'row']}>\n            <FormControl isRequired>\n              <InputGroup size=\"lg\">\n                <InputLeftAddon children=\"Country\" />\n                <Input\n                  type=\"text\"\n                  value={countryName}\n                  onChange={(e) => setCountryName(e.target.value)}\n                  required\n                  autoFocus\n                />\n              </InputGroup>\n            </FormControl>\n            <Button\n              leftIcon={<FaSearch />}\n              size=\"lg\"\n              colorScheme=\"pink\"\n              type=\"submit\"\n            >\n              Search\n            </Button>\n          </Stack>\n        </form>\n      </Box>\n      <Box w={['95%', '90%', '90%', '80%', '80%']}>\n        <SimpleGrid spacing={[5, 5, 10]} mt=\"5\" columns={[1, 1, 1, 2, 3]}>\n          {countryData.map((prop) => (\n            <Card\n              key={prop[0].name.official}\n              Flag={prop[0].flags.svg}\n              Name={prop[0].name.common}\n              Capital={prop[0].capital[0] || prop[1].capital[0]}\n              Continent={prop[0].region}\n              Population={prop[0].population}\n              Area={prop[0].area}\n            />\n          ))}\n        </SimpleGrid>\n      </Box>\n      <Footer />\n    </VStack>\n  );\n};\n\nexport default CountryData;\n","import React from 'react';\nimport { ChakraProvider, theme } from '@chakra-ui/react';\nimport { ColorModeSwitcher } from './ColorModeSwitcher';\nimport CountryData from './CountryData';\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <ColorModeSwitcher justifySelf=\"flex-end\" />\n      <CountryData />\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { extendTheme } from '@chakra-ui/react';\n// 2. Add your color mode config\nconst config = {\n  // initialColorMode: 'light',\n  useSystemColorMode: true,\n};\n// 3. extend the theme\nconst theme = extendTheme({ config });\nexport default theme;\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript initialColorMode={theme.config.initialColorMode} />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}